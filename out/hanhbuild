#!/bin/sh
err() {
echo "ERROR: $*"
}

die() {
err "$*"
exit 1
}

fetch() {
for x in "$@"; do
	eval "$downloader" "$x"
done
}

fetch_pkg() {
if test -z "$repo"; then
	repo="$(ls $MIRRORDIR)"
fi

for x in "$@"; do
	for y in $repo; do
		for z in $(cat "$MIRRORDIR"/"$repo"); do
			url="$z/$x/buildhanh"
			fetch "$url"
			if test -f buildhanh; then 
				mkdir "$x"
				mv buildhanh "$x"/buildhanh
				break 
			fi
		done
		if test -f "$x"/buildhanh; then
			break
		fi
	done
done
}

check_deps() {
for dep in "$@"; do
	if ! test -d "$SYSROOT"/var/lib/pachanh/system/"$dep"; then
		if test -n "$builddeps"; then
			fetch_pkg "$dep" 
			cd "$dep"
			hanhbuild action="build"
		fi
	fi
done
}

check_mkdeps() {
check_deps "$*"
}


check_file() {
for x in "$@"; do
	if ! test -f "$hanhdir"/"$x"; then 
		die "$x not found!"
	fi
done
}

check_contain() {
cd "$pkgdir"/var/lib/pachanh/system
for x in "$@"; do
	ln -sf "$name" "$x" 
done
}

check_config() {
for x in "$@"; do 
	mv "$pkgdir"/"$x" "$pkgdir"/"$x".newfile
done
}

gen_db() {
echo "$name-$ver" >  data
echo "	$desc"    >> data
}

gen_info() {
info="${1}"
echo "Name: $name" >> "$info"
echo "Version: $ver" >> "$info"
echo "Description: $desc" >> "$info"
echo "Depends: $depends" >> "$info"
echo "Contain: $contain" >> "$info" 
echo "Homepage: $home" >> "$info"
echo "License: $license" >> "$info"
}

gen_filelist() {
FILELIST="${1}"
cd "${pkgdir}"
find * | tee "$FILELIST" > /dev/null 2>&1
}

gen_header() {
HEADER="${1}"
echo "name=\"$name\"" >> "$HEADER"
echo "version=\"$ver\"" >> "$HEADER"
echo "desc=\"$desc\"" >> "$HEADER"
echo "depends=\"$depends\"" >> "$HEADER"
echo "contain=\"$contain\"" >> "$HEADER"
echo "config=\"$config\"" >> "$HEADER"
echo "pkg_infodir=\"var/lib/pachanh/system/$name\"" >> "$HEADER"
}

mktarball() {
tar="${1}"
dir="${2}"
cd "$dir"
tar -cJf "$pkgdir"/"$tar" .
}

build() {
if test -z "$buildfile"; then
	buildfile="buildhanh"
fi
. "$buildfile" || die "$buildfile not found"

tarball="$name"-$ver.hanhpkg.tar.xz

if test -f "$hanhdir"/"$tarball"; then 
	if test -z "$force"; then 
		die "Package built"
	fi
fi

if test -n "$clean"; then
	rm -rf "$pkgdir" "$workdir" "$hanhdir"/.buildinfo "$hanhdir"/"$tarball" 
fi

mkdir -p "$pkgdir" "$workdir"

if test -f .buildinfo; then 	
	. .buildinfo || die "Failed to run .buildinfo"
fi

if test -z "$task"; then
	task="unpack compile mkpkg" 
fi

if test -n "$flag"; then
	cmd_compile="$(cat "$buildfile" | grep -w compile-$flag)"
	if test -z "$cmd_compile"; then
		die "Flag $flag not found!"
	else
		task="$(echo "$task" | sed \"s|compile|compile-$flag|g\")"
		echo "flag=\"$flag\"" >> "$hanhdir"/.buildinfo
	fi
fi

if test -z "nodeps"; then 
	check_deps "$deps"
	check_mkdeps "$mkdeps"
fi

fetch "$sources"
check_files "$files" 

for x in $task; do 
	echo "Running function $x..."
	"$x" || die "Failed to run function $x"
	if test "$x" == "mkpkg"; then
		repack=1;
	fi
done

if test -n "$repack"; then
	infodir="$pkgdir"/var/lib/pachanh/system/"$name"
	mkdir -p "$infodir"
	gen_info "$infodir"/info
	gen_header "$pkgdir"/pre-install
	gen_header "$infodir"/header
	gen_filelist "$infodir"/filelist
	mktarball "$hanhdir"/"$tarball" "$pkgdir"	
fi
} 

. /home/user/ihateit/etc/hanhbuild.conf || die "Configuration file not found!"
eval "$*"

$action
